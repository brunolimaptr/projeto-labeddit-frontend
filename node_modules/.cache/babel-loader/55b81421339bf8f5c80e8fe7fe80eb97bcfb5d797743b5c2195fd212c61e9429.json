{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\Desktop\\\\projeto-labeddit-frontend\\\\main\\\\src\\\\pages\\\\postsComments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\nimport { vaiParaLogin } from \"../coordinator/coordinator\";\nimport { CardComments, MainPostsComments } from \"./postsComments.styled\";\nimport { CardPost } from \"./posts.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PostComment(props) {\n  _s();\n  const token = window.localStorage.getItem(\"tokenLogin\");\n  const params = useParams();\n  const [postsComments, setPostsComments] = useState([]);\n  const [content, setContent] = useState(\"\");\n  const onChangeComment = e => {\n    setContent(e.target.value);\n  };\n  const bodyCreateComment = {\n    \"comment\": content\n  };\n  const createComment = async () => {\n    try {\n      const response = await axios.post(`https://labeddit-0qmm.onrender.com/comments/${params.id}`, bodyCreateComment, {\n        headers: {\n          \"Authorization\": token\n        }\n      });\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getPostComment = async () => {\n    try {\n      const response = await axios.get(`https://labeddit-0qmm.onrender.com/posts/comment/${params.id}`, {\n        headers: {\n          \"Authorization\": token\n        }\n      });\n      console.log(response.data.Post);\n      setPostsComments(response.data.Post);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    if (!token) {\n      vaiParaLogin(Navigate);\n    }\n  }, []);\n  useEffect(() => {\n    getPostComment();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MainPostsComments, {\n    children: [/*#__PURE__*/_jsxDEV(CardPost, {\n      children: postsComments && postsComments.map(post => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"InputComment\",\n      onChange: onChangeComment,\n      type: \"text\",\n      value: content,\n      placeholder: \"Adicionar comentário\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"BotaoResponder\",\n      onClick: createComment,\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"Responder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 72\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), postsComments && postsComments.map(post => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: post.comentsPost.map(comment => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(CardComments, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: comment.comment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, comment.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 32\n          }, this);\n        })\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 24\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n_s(PostComment, \"Hi1V6beUYeaQdXDPhBXti9qpzI0=\", false, function () {\n  return [useParams];\n});\n_c = PostComment;\nvar _c;\n$RefreshReg$(_c, \"PostComment\");","map":{"version":3,"names":["React","useEffect","useState","axios","Navigate","useNavigate","useParams","vaiParaLogin","CardComments","MainPostsComments","CardPost","jsxDEV","_jsxDEV","PostComment","props","_s","token","window","localStorage","getItem","params","postsComments","setPostsComments","content","setContent","onChangeComment","e","target","value","bodyCreateComment","createComment","response","post","id","headers","location","reload","error","console","log","getPostComment","get","data","Post","children","map","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","type","placeholder","onClick","comentsPost","comment","_c","$RefreshReg$"],"sources":["C:/Users/Bruno/Desktop/projeto-labeddit-frontend/main/src/pages/postsComments.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\r\nimport { vaiParaLogin } from \"../coordinator/coordinator\";\r\nimport { CardComments, MainPostsComments } from \"./postsComments.styled\";\r\nimport { CardPost } from \"./posts.styled\";\r\n\r\n\r\nexport function PostComment(props){\r\n\r\n    const token = window.localStorage.getItem(\"tokenLogin\")\r\n\r\n    const params = useParams()\r\n\r\n     const [postsComments, setPostsComments] = useState([])\r\n     const [content, setContent] = useState(\"\")\r\n\r\n\r\n    const onChangeComment = (e) => {\r\n        setContent(e.target.value);\r\n       }\r\n\r\n       const bodyCreateComment = {\r\n        \"comment\": content,\r\n    }\r\n\r\n    const createComment = async () => {\r\n        try {\r\n            const response = await axios.post(`https://labeddit-0qmm.onrender.com/comments/${params.id}`, bodyCreateComment, {\r\n                headers: {\r\n                    \"Authorization\": token\r\n                }\r\n            })\r\n\r\n           window.location.reload()\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const getPostComment = async () => {\r\n        try {\r\n            const response = await axios.get(`https://labeddit-0qmm.onrender.com/posts/comment/${params.id}`,{\r\n                headers: {\r\n                    \"Authorization\": token\r\n                }\r\n            })\r\n\r\n            console.log(response.data.Post);\r\n            setPostsComments(response.data.Post)\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!token){\r\n            vaiParaLogin(Navigate)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getPostComment()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <MainPostsComments>\r\n        <CardPost>\r\n        {postsComments && postsComments.map((post)=>{\r\n                return <div key={post.id}>\r\n                    <p>{post.content}</p>\r\n                </div>\r\n            })}\r\n        </CardPost>\r\n                    \r\n    \r\n            <input className=\"InputComment\" onChange={onChangeComment} type=\"text\" value={content} placeholder={\"Adicionar comentário\"}></input>\r\n            <button className=\"BotaoResponder\" onClick={createComment}><em>Responder</em></button>\r\n    \r\n            {postsComments && postsComments.map((post)=>{\r\n                return <div key={post.id}>\r\n                    {post.comentsPost.map((comment)=>{\r\n                        return <div key={comment.id}>\r\n                            <CardComments>\r\n                            <p>{comment.comment}</p>\r\n                            </CardComments>\r\n                        </div>\r\n                    })}\r\n                \r\n                \r\n    \r\n                </div>\r\n            })}\r\n           \r\n        </MainPostsComments>\r\n    )\r\n    \r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}