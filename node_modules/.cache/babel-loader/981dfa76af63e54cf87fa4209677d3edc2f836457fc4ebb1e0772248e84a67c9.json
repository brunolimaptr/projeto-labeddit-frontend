{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\Desktop\\\\projeto-labeddit-frontend\\\\main\\\\src\\\\pages\\\\posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Post() {\n  _s();\n  // const [email, setEmail] = useState([])\n  // const [password, setPassword] = useState([])\n\n  // const bodyLogin = {\n  //     \"email\": email,\n  //     \"password\": password\n  // }\n\n  // const onChangeEmail = (e) => {\n  //    setEmail(e.target.value);\n  //   }\n\n  //   const onChangePassword = (e) => {\n  //     setPassword(e.target.value);\n  //   }\n\n  const createPost = async props => {\n    try {\n      const response = await axios.post(`https://labeddit-0qmm.onrender.com/posts`, bodyCreatePost);\n      console.log(response);\n      props.set(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    postLogin();\n  }, [email && password]);\n  return /*#__PURE__*/_jsxDEV(Main, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: onChangeEmail,\n      type: \"text\",\n      value: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: onChangePassword,\n      type: \"text\",\n      value: password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 1\n  }, this);\n}\n_s(Post, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Post","_s","createPost","props","response","post","bodyCreatePost","console","log","set","error","postLogin","email","password","Main","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onChangeEmail","type","value","onChangePassword","_c","$RefreshReg$"],"sources":["C:/Users/Bruno/Desktop/projeto-labeddit-frontend/main/src/pages/posts.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport function Post(){\r\n\r\n    // const [email, setEmail] = useState([])\r\n    // const [password, setPassword] = useState([])\r\n\r\n    // const bodyLogin = {\r\n    //     \"email\": email,\r\n    //     \"password\": password\r\n    // }\r\n\r\n    // const onChangeEmail = (e) => {\r\n    //    setEmail(e.target.value);\r\n    //   }\r\n  \r\n    //   const onChangePassword = (e) => {\r\n    //     setPassword(e.target.value);\r\n    //   }\r\n\r\n\r\nconst createPost = async (props) => {\r\n    try {\r\n        const response = await axios.post(`https://labeddit-0qmm.onrender.com/posts`, bodyCreatePost)\r\n\r\n        console.log(response);\r\n        props.set(response)\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nuseEffect(() => {\r\n    postLogin()\r\n}, [email && password])\r\n\r\n\r\nreturn (\r\n<Main>\r\n    \r\n    <p>Email</p><input onChange={onChangeEmail} type=\"text\" value={email}></input>\r\n    <p>Password</p><input onChange={onChangePassword} type=\"text\" value={password}></input>\r\n\r\n</Main>\r\n)\r\n\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EAElB;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAGJ,MAAMC,UAAU,GAAG,MAAOC,KAAK,IAAK;IAChC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAE,0CAAyC,EAAEC,cAAc,CAAC;MAE7FC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;MACrBD,KAAK,CAACM,GAAG,CAACL,QAAQ,CAAC;IAEvB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACtB;EACJ,CAAC;EAEDf,SAAS,CAAC,MAAM;IACZgB,SAAS,EAAE;EACf,CAAC,EAAE,CAACC,KAAK,IAAIC,QAAQ,CAAC,CAAC;EAGvB,oBACAd,OAAA,CAACe,IAAI;IAAAC,QAAA,gBAEDhB,OAAA;MAAAgB,QAAA,EAAG;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eAAApB,OAAA;MAAOqB,QAAQ,EAAEC,aAAc;MAACC,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEX;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC9EpB,OAAA;MAAAgB,QAAA,EAAG;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eAAApB,OAAA;MAAOqB,QAAQ,EAAEI,gBAAiB;MAACF,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEV;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEpF;AAGP;AAAClB,EAAA,CA7CeD,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}