{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\Desktop\\\\projeto-labeddit-frontend\\\\main\\\\src\\\\pages\\\\posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Post() {\n  _s();\n  const [content, setContent] = useState([]);\n  const bodyCreatePost = {\n    \"content\": content\n  };\n  const onChangeContent = e => {\n    setContent(e.target.value);\n  };\n  const createPost = async props => {\n    try {\n      const response = await axios.post(`https://labeddit-0qmm.onrender.com/posts`, bodyCreatePost, {\n        headers: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImQzNzNkN2FjLTc0OTMtNDNlNS1iMGE0LTZlOGIwNDA3NjA0YyIsIm5pY2tfbmFtZSI6ImphbyIsInJvbGUiOiJVc3VhcmlvIiwiaWF0IjoxNjc4NzQxODMwLCJleHAiOjE2Nzg4MjgyMzB9.vXRyffeUvZiWRrJIPtNvxhV_TW_4ZVtASZ44RK0cYU8\"\n      });\n      console.log(response);\n      props.setPosts(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    createPost();\n  }, [props.setPosts]);\n  const onClickBotao = () => {\n    setContent(content);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: onChangeContent,\n      type: \"text\",\n      value: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickBotao,\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"Buscar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Post, \"gRb/xpZ2tFPFe5xJrmrGOH9fIlI=\");\n_c = Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Post","_s","content","setContent","bodyCreatePost","onChangeContent","e","target","value","createPost","props","response","post","headers","console","log","setPosts","error","onClickBotao","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Bruno/Desktop/projeto-labeddit-frontend/main/src/pages/posts.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport function Post(){\r\n\r\n    const [content, setContent] = useState([])\r\n\r\n    const bodyCreatePost = {\r\n        \"content\": content,\r\n        \r\n    }\r\n\r\n    const onChangeContent = (e) => {\r\n       setContent(e.target.value);\r\n      }\r\n\r\n\r\nconst createPost = async (props) => {\r\n    try {\r\n        const response = await axios.post(`https://labeddit-0qmm.onrender.com/posts`, bodyCreatePost,{\r\n            headers: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImQzNzNkN2FjLTc0OTMtNDNlNS1iMGE0LTZlOGIwNDA3NjA0YyIsIm5pY2tfbmFtZSI6ImphbyIsInJvbGUiOiJVc3VhcmlvIiwiaWF0IjoxNjc4NzQxODMwLCJleHAiOjE2Nzg4MjgyMzB9.vXRyffeUvZiWRrJIPtNvxhV_TW_4ZVtASZ44RK0cYU8\"\r\n        })\r\n\r\n        console.log(response);\r\n        props.setPosts(response)\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nuseEffect(() => {\r\n    createPost()\r\n}, [props.setPosts])\r\n\r\nconst onClickBotao = () =>{\r\n    setContent(content)\r\n    \r\n    }\r\n\r\nreturn (\r\n<>\r\n    \r\n    <p>Content</p><input onChange={onChangeContent} type=\"text\" value={content}></input>\r\n    <button onClick={onClickBotao}><em>Buscar</em></button>\r\n\r\n</>\r\n)\r\n\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,OAAO,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EAElB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,cAAc,GAAG;IACnB,SAAS,EAAEF;EAEf,CAAC;EAED,MAAMG,eAAe,GAAIC,CAAC,IAAK;IAC5BH,UAAU,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;EAGP,MAAMC,UAAU,GAAG,MAAOC,KAAK,IAAK;IAChC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAE,0CAAyC,EAAER,cAAc,EAAC;QACzFS,OAAO,EAAE;MACb,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;MACrBD,KAAK,CAACM,QAAQ,CAACL,QAAQ,CAAC;IAE5B,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACtB;EACJ,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACZgB,UAAU,EAAE;EAChB,CAAC,EAAE,CAACC,KAAK,CAACM,QAAQ,CAAC,CAAC;EAEpB,MAAME,YAAY,GAAGA,CAAA,KAAK;IACtBf,UAAU,CAACD,OAAO,CAAC;EAEnB,CAAC;EAEL,oBACAL,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBAEItB,OAAA;MAAAsB,QAAA,EAAG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eAAA1B,OAAA;MAAO2B,QAAQ,EAAEnB,eAAgB;MAACoB,IAAI,EAAC,MAAM;MAACjB,KAAK,EAAEN;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACpF1B,OAAA;MAAQ6B,OAAO,EAAER,YAAa;MAAAC,QAAA,eAACtB,OAAA;QAAAsB,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA,gBAExD;AAGH;AAACtB,EAAA,CA9CeD,IAAI;AAAA2B,EAAA,GAAJ3B,IAAI;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}