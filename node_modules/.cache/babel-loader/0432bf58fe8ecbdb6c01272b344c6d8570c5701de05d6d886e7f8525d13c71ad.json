{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\Desktop\\\\projeto-labeddit-frontend\\\\main\\\\src\\\\pages\\\\postsComments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function PostComment(props) {\n  _s();\n  const params = useParams();\n  const getPostComment = async () => {\n    try {\n      var _response$data, _response$data$Post;\n      const response = await axios.get(`https://labeddit-0qmm.onrender.com/posts/comment/${params.id}`, {\n        headers: {\n          \"Authorization\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImQzNzNkN2FjLTc0OTMtNDNlNS1iMGE0LTZlOGIwNDA3NjA0YyIsIm5pY2tfbmFtZSI6ImphbyIsInJvbGUiOiJVc3VhcmlvIiwiaWF0IjoxNjc4ODk1MDQxLCJleHAiOjE2Nzg5ODE0NDF9.NYgBL3kJ9qaPU9hrKvp42hZ1fzV4VBODBsD5Vjk_eas\"\n        }\n      });\n      console.log(response.data.Post);\n      props.setPostsComments(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$Post = _response$data.Post) === null || _response$data$Post === void 0 ? void 0 : _response$data$Post.comentsPost);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getPostComment();\n  }, []);\n  console.log(props.postsComments);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.postsComments.map(post => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false);\n}\n_s(PostComment, \"oVl/CosACDqoQXSsHMBk26cu/Mw=\", false, function () {\n  return [useParams];\n});\n_c = PostComment;\nvar _c;\n$RefreshReg$(_c, \"PostComment\");","map":{"version":3,"names":["React","useEffect","axios","useNavigate","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","PostComment","props","_s","params","getPostComment","_response$data","_response$data$Post","response","get","id","headers","console","log","data","Post","setPostsComments","comentsPost","error","postsComments","children","map","post","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Bruno/Desktop/projeto-labeddit-frontend/main/src/pages/postsComments.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\n\r\nexport function PostComment(props){\r\n\r\n    const params = useParams()\r\n\r\n    const getPostComment = async () => {\r\n        try {\r\n            const response = await axios.get(`https://labeddit-0qmm.onrender.com/posts/comment/${params.id}`, {\r\n                headers: {\r\n                    \"Authorization\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImQzNzNkN2FjLTc0OTMtNDNlNS1iMGE0LTZlOGIwNDA3NjA0YyIsIm5pY2tfbmFtZSI6ImphbyIsInJvbGUiOiJVc3VhcmlvIiwiaWF0IjoxNjc4ODk1MDQxLCJleHAiOjE2Nzg5ODE0NDF9.NYgBL3kJ9qaPU9hrKvp42hZ1fzV4VBODBsD5Vjk_eas\"\r\n                }\r\n            })\r\n\r\n            console.log(response.data.Post);\r\n            props.setPostsComments(response?.data?.Post?.comentsPost)\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getPostComment()\r\n    }, [])\r\n\r\n    console.log(props.postsComments);\r\n\r\n    return (\r\n        <>\r\n    \r\n            {/* <p>Content</p><input onChange={onChangeContent} type=\"text\" value={content}></input>\r\n            <button onClick={createPost}><em>Postar</em></button> */}\r\n    \r\n            {props.postsComments.map((post)=>{\r\n                return <div key={post.id}>\r\n                \r\n                \r\n    \r\n                </div>\r\n            })}\r\n           \r\n        </>\r\n    )\r\n    \r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG1D,OAAO,SAASC,WAAWA,CAACC,KAAK,EAAC;EAAAC,EAAA;EAE9B,MAAMC,MAAM,GAAGR,SAAS,EAAE;EAE1B,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MAAA,IAAAC,cAAA,EAAAC,mBAAA;MACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAE,oDAAmDL,MAAM,CAACM,EAAG,EAAC,EAAE;QAC9FC,OAAO,EAAE;UACL,eAAe,EAAE;QACrB;MACJ,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACM,IAAI,CAACC,IAAI,CAAC;MAC/Bb,KAAK,CAACc,gBAAgB,CAACR,QAAQ,aAARA,QAAQ,wBAAAF,cAAA,GAARE,QAAQ,CAAEM,IAAI,cAAAR,cAAA,wBAAAC,mBAAA,GAAdD,cAAA,CAAgBS,IAAI,cAAAR,mBAAA,uBAApBA,mBAAA,CAAsBU,WAAW,CAAC;IAE7D,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZN,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;IACtB;EACJ,CAAC;EAGDzB,SAAS,CAAC,MAAM;IACZY,cAAc,EAAE;EACpB,CAAC,EAAE,EAAE,CAAC;EAENO,OAAO,CAACC,GAAG,CAACX,KAAK,CAACiB,aAAa,CAAC;EAEhC,oBACIrB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,EAKKlB,KAAK,CAACiB,aAAa,CAACE,GAAG,CAAEC,IAAI,IAAG;MAC7B,oBAAOxB,OAAA,YAAUwB,IAAI,CAACZ,EAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAIlB;IACV,CAAC;EAAC,iBAEH;AAGX;AAACvB,EAAA,CA5CeF,WAAW;EAAA,QAERL,SAAS;AAAA;AAAA+B,EAAA,GAFZ1B,WAAW;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}