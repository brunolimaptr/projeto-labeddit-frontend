{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\Desktop\\\\projeto-labeddit-frontend\\\\main\\\\src\\\\pages\\\\postsComments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function PostComment(props) {\n  _s();\n  const params = useParams();\n  const onChangeComment = e => {\n    props.setPostsComments(e.target.value);\n  };\n  const createComment = async () => {\n    try {\n      const response = await axios.post(`https://labeddit-0qmm.onrender.com/posts/comment/${params.id}`, {\n        headers: {\n          \"Authorization\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImQzNzNkN2FjLTc0OTMtNDNlNS1iMGE0LTZlOGIwNDA3NjA0YyIsIm5pY2tfbmFtZSI6ImphbyIsInJvbGUiOiJVc3VhcmlvIiwiaWF0IjoxNjc4ODk1MDQxLCJleHAiOjE2Nzg5ODE0NDF9.NYgBL3kJ9qaPU9hrKvp42hZ1fzV4VBODBsD5Vjk_eas\"\n        }\n      });\n      console.log(response.data.Post);\n      props.setPostsComments(response.data.Post);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getPostComment = async () => {\n    try {\n      const response = await axios.get(`https://labeddit-0qmm.onrender.com/posts/comment/${params.id}`, {\n        headers: {\n          \"Authorization\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImQzNzNkN2FjLTc0OTMtNDNlNS1iMGE0LTZlOGIwNDA3NjA0YyIsIm5pY2tfbmFtZSI6ImphbyIsInJvbGUiOiJVc3VhcmlvIiwiaWF0IjoxNjc4ODk1MDQxLCJleHAiOjE2Nzg5ODE0NDF9.NYgBL3kJ9qaPU9hrKvp42hZ1fzV4VBODBsD5Vjk_eas\"\n        }\n      });\n      console.log(response.data.Post);\n      props.setPostsComments(response.data.Post);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getPostComment();\n  }, []);\n  console.log(props.postsComments);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Responder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: onChangeComment,\n      type: \"text\",\n      value: props.postComment,\n      placeholder: \"Adicionar comentário\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createComment,\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"Postar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 45\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), props.postsComments.map(post => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.comentsPost.map(commment => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: commment.comment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 24\n      }, this);\n    })]\n  }, void 0, true);\n}\n_s(PostComment, \"oVl/CosACDqoQXSsHMBk26cu/Mw=\", false, function () {\n  return [useParams];\n});\n_c = PostComment;\nvar _c;\n$RefreshReg$(_c, \"PostComment\");","map":{"version":3,"names":["React","useEffect","axios","useNavigate","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","PostComment","props","_s","params","onChangeComment","e","setPostsComments","target","value","createComment","response","post","id","headers","console","log","data","Post","error","getPostComment","get","postsComments","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","postComment","placeholder","onClick","map","content","comentsPost","commment","comment","_c","$RefreshReg$"],"sources":["C:/Users/Bruno/Desktop/projeto-labeddit-frontend/main/src/pages/postsComments.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\n\r\nexport function PostComment(props){\r\n\r\n    const params = useParams()\r\n\r\n    const onChangeComment = (e) => {\r\n        props.setPostsComments(e.target.value);\r\n       }\r\n\r\n    const createComment = async () => {\r\n        try {\r\n            const response = await axios.post(`https://labeddit-0qmm.onrender.com/posts/comment/${params.id}`, {\r\n                headers: {\r\n                    \"Authorization\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImQzNzNkN2FjLTc0OTMtNDNlNS1iMGE0LTZlOGIwNDA3NjA0YyIsIm5pY2tfbmFtZSI6ImphbyIsInJvbGUiOiJVc3VhcmlvIiwiaWF0IjoxNjc4ODk1MDQxLCJleHAiOjE2Nzg5ODE0NDF9.NYgBL3kJ9qaPU9hrKvp42hZ1fzV4VBODBsD5Vjk_eas\"\r\n                }\r\n            })\r\n\r\n            console.log(response.data.Post);\r\n            props.setPostsComments(response.data.Post)\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const getPostComment = async () => {\r\n        try {\r\n            const response = await axios.get(`https://labeddit-0qmm.onrender.com/posts/comment/${params.id}`, {\r\n                headers: {\r\n                    \"Authorization\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImQzNzNkN2FjLTc0OTMtNDNlNS1iMGE0LTZlOGIwNDA3NjA0YyIsIm5pY2tfbmFtZSI6ImphbyIsInJvbGUiOiJVc3VhcmlvIiwiaWF0IjoxNjc4ODk1MDQxLCJleHAiOjE2Nzg5ODE0NDF9.NYgBL3kJ9qaPU9hrKvp42hZ1fzV4VBODBsD5Vjk_eas\"\r\n                }\r\n            })\r\n\r\n            console.log(response.data.Post);\r\n            props.setPostsComments(response.data.Post)\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getPostComment()\r\n    }, [])\r\n\r\n    console.log(props.postsComments);\r\n\r\n    return (\r\n        <>\r\n    \r\n            <p>Responder</p><input onChange={onChangeComment} type=\"text\" value={props.postComment} placeholder={\"Adicionar comentário\"}></input>\r\n            <button onClick={createComment}><em>Postar</em></button>\r\n    \r\n            {props.postsComments.map((post)=>{\r\n                return <div key={post.id}>\r\n                    <p>{post.content}</p>\r\n                    <p>{post.comentsPost.map((commment)=>{\r\n                        return <div>\r\n                            <p>{commment.comment}</p>\r\n                        </div>\r\n                    })}</p>\r\n                \r\n                \r\n    \r\n                </div>\r\n            })}\r\n           \r\n        </>\r\n    )\r\n    \r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG1D,OAAO,SAASC,WAAWA,CAACC,KAAK,EAAC;EAAAC,EAAA;EAE9B,MAAMC,MAAM,GAAGR,SAAS,EAAE;EAE1B,MAAMS,eAAe,GAAIC,CAAC,IAAK;IAC3BJ,KAAK,CAACK,gBAAgB,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;EAEJ,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAE,oDAAmDR,MAAM,CAACS,EAAG,EAAC,EAAE;QAC/FC,OAAO,EAAE;UACL,eAAe,EAAE;QACrB;MACJ,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACM,IAAI,CAACC,IAAI,CAAC;MAC/BhB,KAAK,CAACK,gBAAgB,CAACI,QAAQ,CAACM,IAAI,CAACC,IAAI,CAAC;IAE9C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IACtB;EACJ,CAAC;EAED,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAMT,QAAQ,GAAG,MAAMjB,KAAK,CAAC2B,GAAG,CAAE,oDAAmDjB,MAAM,CAACS,EAAG,EAAC,EAAE;QAC9FC,OAAO,EAAE;UACL,eAAe,EAAE;QACrB;MACJ,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACM,IAAI,CAACC,IAAI,CAAC;MAC/BhB,KAAK,CAACK,gBAAgB,CAACI,QAAQ,CAACM,IAAI,CAACC,IAAI,CAAC;IAE9C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IACtB;EACJ,CAAC;EAGD1B,SAAS,CAAC,MAAM;IACZ2B,cAAc,EAAE;EACpB,CAAC,EAAE,EAAE,CAAC;EAENL,OAAO,CAACC,GAAG,CAACd,KAAK,CAACoB,aAAa,CAAC;EAEhC,oBACIxB,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBAEIzB,OAAA;MAAAyB,QAAA,EAAG;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eAAA7B,OAAA;MAAO8B,QAAQ,EAAEvB,eAAgB;MAACwB,IAAI,EAAC,MAAM;MAACpB,KAAK,EAAEP,KAAK,CAAC4B,WAAY;MAACC,WAAW,EAAE;IAAuB;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACrI7B,OAAA;MAAQkC,OAAO,EAAEtB,aAAc;MAAAa,QAAA,eAACzB,OAAA;QAAAyB,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EAEvDzB,KAAK,CAACoB,aAAa,CAACW,GAAG,CAAErB,IAAI,IAAG;MAC7B,oBAAOd,OAAA;QAAAyB,QAAA,gBACHzB,OAAA;UAAAyB,QAAA,EAAIX,IAAI,CAACsB;QAAO;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACrB7B,OAAA;UAAAyB,QAAA,EAAIX,IAAI,CAACuB,WAAW,CAACF,GAAG,CAAEG,QAAQ,IAAG;YACjC,oBAAOtC,OAAA;cAAAyB,QAAA,eACHzB,OAAA;gBAAAyB,QAAA,EAAIa,QAAQ,CAACC;cAAO;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAK;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACvB;UACV,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK;MAAA,GANMf,IAAI,CAACC,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAUlB;IACV,CAAC,CAAC;EAAA,gBAEH;AAGX;AAACxB,EAAA,CAtEeF,WAAW;EAAA,QAERL,SAAS;AAAA;AAAA0C,EAAA,GAFZrC,WAAW;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}