{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport axios from \"axios\";\nexport function Router() {\n  _s();\n  const [login, setLogin] = useState({});\n  const [users, setUsers] = useState({});\n  const body = {\n    \"email\": \"joao@email.com\",\n    \"password\": \"joao99\"\n  };\n  console.log(users);\n  const postLogin = async () => {\n    try {\n      const response = await axios.post(`https://labeddit-0qmm.onrender.com/users/login`, body);\n      console.log(response);\n      setLogin(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    postLogin();\n  }, []);\n  const getUsers = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3003/users`);\n      console.log(response);\n      setUsers(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getUsers();\n  }, []);\n}\n_s(Router, \"92asNZCvF+VxhlqOgymk3wxvp/4=\");\n_c = Router;\nvar _c;\n$RefreshReg$(_c, \"Router\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Routes","Route","axios","Router","_s","login","setLogin","users","setUsers","body","console","log","postLogin","response","post","error","getUsers","get","_c","$RefreshReg$"],"sources":["C:/Users/Bruno/Desktop/projeto-labeddit-frontend/main/src/routers/Router.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport function Router(){\r\n \r\n    const [login, setLogin] = useState({})\r\n    const [users, setUsers] = useState({})\r\n\r\n    const body = {\r\n    \"email\": \"joao@email.com\",\r\n    \"password\": \"joao99\"\r\n    }\r\n\r\n    console.log(users);\r\n   \r\n   const postLogin = async () => {\r\n    try {\r\n    const response = await axios.post(`https://labeddit-0qmm.onrender.com/users/login`,body)\r\n\r\n     console.log(response);\r\n     setLogin(response)\r\n\r\n    }catch(error) {\r\n    console.log(error);\r\n  }\r\n   }\r\n\r\n  useEffect(()=>{\r\n    postLogin()\r\n  },[])\r\n\r\n\r\n     \r\n  const getUsers = async () => {\r\n    try {\r\n    const response = await axios.get(`http://localhost:3003/users`)\r\n\r\n     console.log(response);\r\n     setUsers(response)\r\n\r\n    }catch(error) {\r\n    console.log(error);\r\n  }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    getUsers()\r\n  },[])\r\n\r\n}\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC/D,OAAOC,KAAK,MAAM,OAAO;AAGzB,OAAO,SAASC,MAAMA,CAAA,EAAE;EAAAC,EAAA;EAEpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtC,MAAMW,IAAI,GAAG;IACb,OAAO,EAAE,gBAAgB;IACzB,UAAU,EAAE;EACZ,CAAC;EAEDC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EAEnB,MAAMK,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACJ,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAE,gDAA+C,EAACL,IAAI,CAAC;MAEvFC,OAAO,CAACC,GAAG,CAACE,QAAQ,CAAC;MACrBP,QAAQ,CAACO,QAAQ,CAAC;IAEnB,CAAC,QAAME,KAAK,EAAE;MACdL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;IACpB;EACC,CAAC;EAEFlB,SAAS,CAAC,MAAI;IACZe,SAAS,EAAE;EACb,CAAC,EAAC,EAAE,CAAC;EAIL,MAAMI,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACJ,MAAMH,QAAQ,GAAG,MAAMX,KAAK,CAACe,GAAG,CAAE,6BAA4B,CAAC;MAE9DP,OAAO,CAACC,GAAG,CAACE,QAAQ,CAAC;MACrBL,QAAQ,CAACK,QAAQ,CAAC;IAEnB,CAAC,QAAME,KAAK,EAAE;MACdL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;IACpB;EACA,CAAC;EAEDlB,SAAS,CAAC,MAAI;IACZmB,QAAQ,EAAE;EACZ,CAAC,EAAC,EAAE,CAAC;AAEP;AAACZ,EAAA,CA9CeD,MAAM;AAAAe,EAAA,GAANf,MAAM;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}