{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\Desktop\\\\projeto-labeddit-frontend\\\\main\\\\src\\\\routers\\\\Router.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Router() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [login, setLogin] = useState([]);\n  const [signup, setSignup] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [postsComments, setPostsComments] = useState([]);\n  const bodyLogin = {\n    \"email\": \"joao@email.com\",\n    \"password\": \"joao99\"\n  };\n  const bodySignup = {\n    \"nick_name\": \"jao\",\n    \"email\": \"joao@email.com\",\n    \"password\": \"joao99\"\n  };\n  const getUsers = async () => {\n    try {\n      const response = await axios.get(`https://labeddit-0qmm.onrender.com/users`);\n      console.log(response);\n      setUsers(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getUsers();\n  }, []);\n  const postLogin = async () => {\n    try {\n      const response = await axios.post(`https://labeddit-0qmm.onrender.com/users/login`, bodyLogin);\n      console.log(response);\n      setLogin(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    postLogin();\n  }, []);\n  const postSignup = async () => {\n    try {\n      const response = await axios.post(`https://labeddit-0qmm.onrender.com/users/signup`, bodySignup);\n      console.log(response);\n      setSignup(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    postSignup();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/users/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/users/signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        path: \"/posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        path: \"/posts/commentId\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Router, \"7gqNCDHkMuDdUsG6GcuqDAfSUho=\");\n_c = Router;\nvar _c;\n$RefreshReg$(_c, \"Router\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Routes","Route","axios","jsxDEV","_jsxDEV","Router","_s","users","setUsers","login","setLogin","signup","setSignup","posts","setPosts","postsComments","setPostsComments","bodyLogin","bodySignup","getUsers","response","get","console","log","error","postLogin","post","postSignup","children","path","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Bruno/Desktop/projeto-labeddit-frontend/main/src/routers/Router.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport function Router() {\r\n\r\n    const [users, setUsers] = useState([])\r\n    const [login, setLogin] = useState([])\r\n    const [signup, setSignup] = useState([])\r\n    const [posts, setPosts] = useState([])\r\n    const [postsComments, setPostsComments] = useState([])\r\n\r\n    const bodyLogin = {\r\n        \"email\": \"joao@email.com\",\r\n        \"password\": \"joao99\"\r\n    }\r\n\r\n    const bodySignup = {\r\n        \"nick_name\": \"jao\",\r\n        \"email\": \"joao@email.com\",\r\n        \"password\": \"joao99\"\r\n    }\r\n\r\n\r\n    const getUsers = async () => {\r\n        try {\r\n            const response = await axios.get(`https://labeddit-0qmm.onrender.com/users`)\r\n\r\n            console.log(response);\r\n            setUsers(response)\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsers()\r\n    }, [])\r\n\r\n\r\n    const postLogin = async () => {\r\n        try {\r\n            const response = await axios.post(`https://labeddit-0qmm.onrender.com/users/login`, bodyLogin)\r\n\r\n            console.log(response);\r\n            setLogin(response)\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        postLogin()\r\n    }, [])\r\n\r\n\r\n    const postSignup = async () => {\r\n        try {\r\n            const response = await axios.post(`https://labeddit-0qmm.onrender.com/users/signup`, bodySignup)\r\n\r\n            console.log(response);\r\n            setSignup(response)\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        postSignup()\r\n    }, [])\r\n\r\n    \r\n\r\nreturn (\r\n    <BrowserRouter>\r\n        <Routes>\r\n            <Route path=\"/users/login\">\r\n            </Route>\r\n            <Route path=\"/users/signup\">\r\n            </Route>\r\n            <Router path=\"/posts\">\r\n            </Router>\r\n            <Router path=\"/posts/commentId\">\r\n            </Router>\r\n        </Routes>\r\n    </BrowserRouter>\r\n)\r\n\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}