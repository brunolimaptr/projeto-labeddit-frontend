{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\Desktop\\\\projeto-labeddit-frontend\\\\main\\\\src\\\\routers\\\\Router.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Router() {\n  _s();\n  const [login, setLogin] = useState([]);\n  const [users, setUsers] = useState([]);\n  const body = {\n    \"email\": \"joao@email.com\",\n    \"password\": \"joao99\"\n  };\n  const postLogin = async () => {\n    try {\n      const response = await axios.post(`https://labeddit-0qmm.onrender.com/users/login`, body);\n      console.log(response);\n      setLogin(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    postLogin();\n  }, []);\n  const getUsers = async () => {\n    try {\n      const response = await axios.get(`https://labeddit-0qmm.onrender.com/users`);\n      console.log(response);\n      setUsers(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/users/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/users/signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        path: \"/posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        path: \"/posts/commentId\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Router, \"RG74fs2hLIpV+E6iS+/cDGxhROY=\");\n_c = Router;\nvar _c;\n$RefreshReg$(_c, \"Router\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Routes","Route","axios","jsxDEV","_jsxDEV","Router","_s","login","setLogin","users","setUsers","body","postLogin","response","post","console","log","error","getUsers","get","children","path","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Bruno/Desktop/projeto-labeddit-frontend/main/src/routers/Router.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport function Router(){\r\n \r\n    const [login, setLogin] = useState([])\r\n    const [users, setUsers] = useState([])\r\n\r\n    const body = {\r\n    \"email\": \"joao@email.com\",\r\n    \"password\": \"joao99\"\r\n    }\r\n\r\n   \r\n   \r\n   const postLogin = async () => {\r\n    try {\r\n    const response = await axios.post(`https://labeddit-0qmm.onrender.com/users/login`,body)\r\n\r\n     console.log(response);\r\n     setLogin(response)\r\n\r\n    }catch(error) {\r\n    console.log(error);\r\n  }\r\n   }\r\n\r\n  useEffect(()=>{\r\n    postLogin()\r\n  },[])\r\n\r\n\r\n     \r\n  const getUsers = async () => {\r\n    try {\r\n    const response = await axios.get(`https://labeddit-0qmm.onrender.com/users`)\r\n\r\n     console.log(response);\r\n     setUsers(response)\r\n\r\n    }catch(error) {\r\n    console.log(error);\r\n  }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    getUsers()\r\n  },[])\r\n\r\n\r\n  return(\r\n    <BrowserRouter>\r\n    <Routes>\r\n        <Route path=\"/users/login\">\r\n        </Route>\r\n        <Route path=\"/users/signup\">\r\n        </Route>\r\n        <Router path=\"/posts\">\r\n        </Router>\r\n        <Router path=\"/posts/commentId\">\r\n        </Router>\r\n    </Routes>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC/D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,OAAO,SAASC,MAAMA,CAAA,EAAE;EAAAC,EAAA;EAEpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMa,IAAI,GAAG;IACb,OAAO,EAAE,gBAAgB;IACzB,UAAU,EAAE;EACZ,CAAC;EAIF,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACJ,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAE,gDAA+C,EAACH,IAAI,CAAC;MAEvFI,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACrBL,QAAQ,CAACK,QAAQ,CAAC;IAEnB,CAAC,QAAMI,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB;EACC,CAAC;EAEFpB,SAAS,CAAC,MAAI;IACZe,SAAS,EAAE;EACb,CAAC,EAAC,EAAE,CAAC;EAIL,MAAMM,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACJ,MAAML,QAAQ,GAAG,MAAMX,KAAK,CAACiB,GAAG,CAAE,0CAAyC,CAAC;MAE3EJ,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACrBH,QAAQ,CAACG,QAAQ,CAAC;IAEnB,CAAC,QAAMI,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB;EACA,CAAC;EAEDpB,SAAS,CAAC,MAAI;IACZqB,QAAQ,EAAE;EACZ,CAAC,EAAC,EAAE,CAAC;EAGL,oBACEd,OAAA,CAACL,aAAa;IAAAqB,QAAA,eACdhB,OAAA,CAACJ,MAAM;MAAAoB,QAAA,gBACHhB,OAAA,CAACH,KAAK;QAACoB,IAAI,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAClB,eACRrB,OAAA,CAACH,KAAK;QAACoB,IAAI,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnB,eACRrB,OAAA,CAACC,MAAM;QAACgB,IAAI,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACZ,eACTrB,OAAA,CAACC,MAAM;QAACgB,IAAI,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACtB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACO;AAEpB;AAACnB,EAAA,CA7DeD,MAAM;AAAAqB,EAAA,GAANrB,MAAM;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}