{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\Desktop\\\\projeto-labeddit-frontend\\\\main\\\\src\\\\pages\\\\postsComments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function PostComment(props) {\n  _s();\n  const params = useParams();\n  const getPostComment = async () => {\n    try {\n      const response = await axios.get(`https://labeddit-0qmm.onrender.com/posts/comment/${params.postId}`, {\n        headers: {\n          \"Authorization\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImQzNzNkN2FjLTc0OTMtNDNlNS1iMGE0LTZlOGIwNDA3NjA0YyIsIm5pY2tfbmFtZSI6ImphbyIsInJvbGUiOiJVc3VhcmlvIiwiaWF0IjoxNjc4ODMzNDQ5LCJleHAiOjE2Nzg5MTk4NDl9.7cZsolGc7QGqn4EDYaEcNOs8wbbaBQ6KdXevZRtrl3w\"\n        }\n      });\n      console.log(response.data.Post);\n      props.setPostsComments(response.data.Post);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getPostComment();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.posts.map(post => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.creator.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false);\n}\n_s(PostComment, \"oVl/CosACDqoQXSsHMBk26cu/Mw=\", false, function () {\n  return [useParams];\n});\n_c = PostComment;\nvar _c;\n$RefreshReg$(_c, \"PostComment\");","map":{"version":3,"names":["React","useEffect","axios","useNavigate","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","PostComment","props","_s","params","getPostComment","response","get","postId","headers","console","log","data","Post","setPostsComments","error","children","posts","map","post","creator","name","fileName","_jsxFileName","lineNumber","columnNumber","content","id","_c","$RefreshReg$"],"sources":["C:/Users/Bruno/Desktop/projeto-labeddit-frontend/main/src/pages/postsComments.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\n\r\nexport function PostComment(props){\r\n\r\n    const params = useParams()\r\n\r\n    const getPostComment = async () => {\r\n        try {\r\n            const response = await axios.get(`https://labeddit-0qmm.onrender.com/posts/comment/${params.postId}`, {\r\n                headers: {\r\n                    \"Authorization\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImQzNzNkN2FjLTc0OTMtNDNlNS1iMGE0LTZlOGIwNDA3NjA0YyIsIm5pY2tfbmFtZSI6ImphbyIsInJvbGUiOiJVc3VhcmlvIiwiaWF0IjoxNjc4ODMzNDQ5LCJleHAiOjE2Nzg5MTk4NDl9.7cZsolGc7QGqn4EDYaEcNOs8wbbaBQ6KdXevZRtrl3w\"\r\n                }\r\n            })\r\n\r\n            console.log(response.data.Post);\r\n            props.setPostsComments(response.data.Post)\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getPostComment()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n    \r\n            {/* <p>Content</p><input onChange={onChangeContent} type=\"text\" value={content}></input>\r\n            <button onClick={createPost}><em>Postar</em></button> */}\r\n    \r\n            {props.posts.map((post)=>{\r\n                return <div key={post.id}>\r\n                <p>{post.creator.name}</p>\r\n                <p>{post.content}</p>\r\n                \r\n    \r\n                </div>\r\n            })}\r\n           \r\n        </>\r\n    )\r\n    \r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG1D,OAAO,SAASC,WAAWA,CAACC,KAAK,EAAC;EAAAC,EAAA;EAE9B,MAAMC,MAAM,GAAGR,SAAS,EAAE;EAE1B,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAE,oDAAmDH,MAAM,CAACI,MAAO,EAAC,EAAE;QAClGC,OAAO,EAAE;UACL,eAAe,EAAE;QACrB;MACJ,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACM,IAAI,CAACC,IAAI,CAAC;MAC/BX,KAAK,CAACY,gBAAgB,CAACR,QAAQ,CAACM,IAAI,CAACC,IAAI,CAAC;IAE9C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;IACtB;EACJ,CAAC;EAGDtB,SAAS,CAAC,MAAM;IACZY,cAAc,EAAE;EACpB,CAAC,EAAE,EAAE,CAAC;EAGN,oBACIP,OAAA,CAAAE,SAAA;IAAAgB,QAAA,EAKKd,KAAK,CAACe,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAG;MACrB,oBAAOrB,OAAA;QAAAkB,QAAA,gBACPlB,OAAA;UAAAkB,QAAA,EAAIG,IAAI,CAACC,OAAO,CAACC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAC1B3B,OAAA;UAAAkB,QAAA,EAAIG,IAAI,CAACO;QAAO;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK;MAAA,GAFJN,IAAI,CAACQ,EAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAKlB;IACV,CAAC;EAAC,iBAEH;AAGX;AAACtB,EAAA,CA5CeF,WAAW;EAAA,QAERL,SAAS;AAAA;AAAAgC,EAAA,GAFZ3B,WAAW;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}